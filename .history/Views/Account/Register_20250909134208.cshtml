@using FinancialManagement.ViewModels
@model RegisterViewModel
@{
    ViewData["Title"] = "Sign up for a new account";
}

@section Styles {
    <link rel="stylesheet" href="~/css/Account/Register.css" />
}
<div class="container">
     <div class="row justify-content-center">
        <div class="col-12 col-md-8 col-lg-6 col-xxl-4">
            <h2>@ViewData["Title"]</h2>

            <form asp-action="Register" method="post" novalidate>
                <div class="form-group mb-3">
                    <label asp-for="Name" class="mb-1"></label>
                    <input asp-for="Name" class="form-control mb-2" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="Email" class="mb-1"></label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="Password" class="mb-1"></label>
                    <input asp-for="Password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="ConfirmPassword" class="mb-1"></label>
                    <input asp-for="ConfirmPassword" class="form-control" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>

                <button type="submit" class="btn btn-primary">Register</button>
            </form>
        </div>
     </div>
</div>

@* 
Подключает стандартные скрипты клиентской валидации.
Помещает их в секцию Scripts, которая рендерится в основном шаблоне.
Обеспечивает работу проверки форм на стороне клиента.
 *@
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}